(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{278:function(s,t,a){"use strict";a.r(t);var n=a(38),r=Object(n.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"shell-守护-php脚本进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell-守护-php脚本进程","aria-hidden":"true"}},[s._v("#")]),s._v(" shell 守护 PHP脚本进程")]),s._v(" "),a("h3",{attrs:{id:"写在前面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写在前面","aria-hidden":"true"}},[s._v("#")]),s._v(" 写在前面")]),s._v(" "),a("p",[s._v("在基于 PHP 使用 RabbitMQ 的时候, RabbitMQ 的消费者需要常驻进程, 对于 php 这种天生对常驻进程支持不好的语言来说, 我是通过 while(true) 的方式常驻. 但是如果系统异常常驻的 php 脚本可能被杀死, 所以需要一种机制判断 php 脚本知否在运行, 如果没有, 则需要重启进程.")]),s._v(" "),a("h2",{attrs:{id:"具体实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体实现","aria-hidden":"true"}},[s._v("#")]),s._v(" 具体实现:")]),s._v(" "),a("blockquote",[a("p",[s._v("声明: 代码来自网站, 我根据自己的需求进行修改并记录.")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/sh")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PREFIX")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/home/wwwroot/ubuntu.noasis.cn\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("INTERVAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" php "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PREFIX}")]),s._v("/job.php "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PREFIX}")]),s._v("/job.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PREFIX}")]),s._v("/job.pid\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -d /proc/"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("PREFIX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("/job.pid"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" php "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PREFIX}")]),s._v("/job.php "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PREFIX}")]),s._v("/job.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PREFIX}")]),s._v("/job.pid\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NEW_PID:'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("PREFIX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("/job.pid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'+%Y-%m-%d %H:%M:%S'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${INTERVAL}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 备注信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" 表示忽略SIGHUP信号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("编号1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",比如退出终端时发送的SIGHUP信号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("kill -SIGHUP PID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("会被忽略掉.\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${PREFIX}")]),s._v("/swoole.log 表示把标准输出重定向"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("表示追加,"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("表示覆盖"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("到文件swoole.log\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v(" 表示将标准错误"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(":stderr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("重定向到标准输出"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":stdout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(".\n结尾加上"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("表示将命令放入后台运行.\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$!")]),s._v(" 表示前面运行在后台的PHP进程PID.\n")])])]),a("h2",{attrs:{id:"常用查看语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用查看语句","aria-hidden":"true"}},[s._v("#")]),s._v(" 常用查看语句")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看某个脚本知否在执行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" aux "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" index.php\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 杀进程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" -9 PID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("进程ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h2",{attrs:{id:"懒人方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#懒人方法","aria-hidden":"true"}},[s._v("#")]),s._v(" 懒人方法")]),s._v(" "),a("p",[s._v("nohup /usr/local/php/bin/php index.php job mqConsumer >> mq_err_log.txt 2>&1 &")])])},[],!1,null,null,null);t.default=r.exports}}]);