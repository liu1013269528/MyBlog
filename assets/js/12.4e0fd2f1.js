(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{272:function(t,v,a){"use strict";a.r(v);var _=a(38),r=Object(_.a)({},function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"uml-入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml-入门","aria-hidden":"true"}},[t._v("#")]),t._v(" UML 入门")]),t._v(" "),a("h2",{attrs:{id:"大纲"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大纲","aria-hidden":"true"}},[t._v("#")]),t._v(" 大纲")]),t._v(" "),a("ul",[a("li",[t._v("定义")]),t._v(" "),a("li",[t._v("特点")]),t._v(" "),a("li",[t._v("分类")]),t._v(" "),a("li",[t._v("类图")]),t._v(" "),a("li",[t._v("时序图")])]),t._v(" "),a("h2",{attrs:{id:"一、uml-定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、uml-定义","aria-hidden":"true"}},[t._v("#")]),t._v(" 一、UML 定义")]),t._v(" "),a("p",[t._v("统一建模语言（Unified Modeling Language, UML）非专利第三代建模语言。")]),t._v(" "),a("h3",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点","aria-hidden":"true"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("ul",[a("li",[t._v("UML 是一种开放的方法")]),t._v(" "),a("li",[t._v("用户说明、可视化、构建和编写一个正在开发的面向对象的、软件密集型系统的制品（模型，源代码）的开放方法")]),t._v(" "),a("li",[t._v("UML 展现了一系列最佳工程实践，这些实践对大规模、复杂系统进行建模方面，特别是在软件架构层次被证明有效")])]),t._v(" "),a("h3",{attrs:{id:"分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类","aria-hidden":"true"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),a("h3",{attrs:{id:"结构式图形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构式图形","aria-hidden":"true"}},[t._v("#")]),t._v(" 结构式图形")]),t._v(" "),a("blockquote",[a("p",[t._v("强调的式系统式建模")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("分类名")]),t._v(" "),a("th",[t._v("包含")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("静态图")]),t._v(" "),a("td",[t._v("类图*、对象图、包图")])]),t._v(" "),a("tr",[a("td",[t._v("实现图")]),t._v(" "),a("td",[t._v("组件图、部署图")])]),t._v(" "),a("tr",[a("td",[t._v("剖面图")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("符合结构图")]),t._v(" "),a("td")])])]),t._v(" "),a("h3",{attrs:{id:"行为式图形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行为式图形","aria-hidden":"true"}},[t._v("#")]),t._v(" 行为式图形")]),t._v(" "),a("blockquote",[a("p",[t._v("强调系统建模中出发的事件")])]),t._v(" "),a("pre",[a("code",[t._v("- 活动图\n- 状态图\n- 用例图\t\n")])]),t._v(" "),a("h3",{attrs:{id:"交互式图形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#交互式图形","aria-hidden":"true"}},[t._v("#")]),t._v(" 交互式图形")]),t._v(" "),a("blockquote",[a("p",[t._v("属于行为式图形的子集合，强调系统模型中资料流程")])]),t._v(" "),a("pre",[a("code",[t._v("- 通信图\n- 交互概述图\n- 时序图*\n- 时间图\n")])]),t._v(" "),a("h2",{attrs:{id:"uml-类图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml-类图","aria-hidden":"true"}},[t._v("#")]),t._v(" UML 类图")]),t._v(" "),a("p",[t._v("Class Diagram: 用于表示类、接口、实例等之间相互的静态关系")]),t._v(" "),a("p",[t._v("类图不只有类")]),t._v(" "),a("h2",{attrs:{id:"记忆技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#记忆技巧","aria-hidden":"true"}},[t._v("#")]),t._v(" 记忆技巧")]),t._v(" "),a("h3",{attrs:{id:"uml-箭头方向：由-子类-指向-父类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml-箭头方向：由-子类-指向-父类","aria-hidden":"true"}},[t._v("#")]),t._v(" UML 箭头方向：由 "),a("strong",[t._v("子类")]),t._v(" 指向 "),a("strong",[t._v("父类")])]),t._v(" "),a("p",[t._v("理解：子类 extends 父类，子类明确父类定义，父类却不知道子类的定义")]),t._v(" "),a("h3",{attrs:{id:"空心三角箭头：继承-类-或-实现-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空心三角箭头：继承-类-或-实现-接口","aria-hidden":"true"}},[t._v("#")]),t._v(" 空心三角箭头：继承-类 或 实现-接口")]),t._v(" "),a("p",[t._v("实线：继承关系，is a 关系，扩展目的，不虚，很结实")]),t._v(" "),a("p",[t._v("虚线：实现关系")]),t._v(" "),a("p",[t._v("空心菱形： 聚合， 整体与局部的关系，具有独立生命周期，has a 关系，弱关系")]),t._v(" "),a("p",[t._v("实心菱形：部分与整体的关系，强关系，具有相同的生命周期， contains a， 强关系")]),t._v(" "),a("h3",{attrs:{id:"常见数字表达与含义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见数字表达与含义","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见数字表达与含义")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("表达式")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("0..1")]),t._v(" "),a("td",[t._v("0或1个实例")])]),t._v(" "),a("tr",[a("td",[t._v("0..*")]),t._v(" "),a("td",[t._v("0或多个实例")])]),t._v(" "),a("tr",[a("td",[t._v("1..1")]),t._v(" "),a("td",[t._v("1个实例")])]),t._v(" "),a("tr",[a("td",[t._v("1")]),t._v(" "),a("td",[t._v("只有一个实例")])]),t._v(" "),a("tr",[a("td",[t._v("1..*")]),t._v(" "),a("td",[t._v("至少有一个实例")])])])]),t._v(" "),a("h2",{attrs:{id:"uml-时序图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml-时序图","aria-hidden":"true"}},[t._v("#")]),t._v(" UML 时序图")]),t._v(" "),a("p",[t._v("Sequence Diagram: 是现实对象之间交互的图，这些对象按照时间顺序排列；")]),t._v(" "),a("p",[t._v("时序图包含元素：对象、生命线 控制焦点（Focus of control）、消息（message） 等")]),t._v(" "),a("h2",{attrs:{id:"uml-类图-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uml-类图-2","aria-hidden":"true"}},[t._v("#")]),t._v(" UML 类图")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("GeelyClass")]),t._v(" "),a("th",[t._v("类名")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("+name: String")]),t._v(" "),a("td",[t._v("public 属性 name")])]),t._v(" "),a("tr",[a("td",[t._v("-age:int")]),t._v(" "),a("td",[t._v("private 属性 age")])]),t._v(" "),a("tr",[a("td",[t._v("#weight:double")]),t._v(" "),a("td",[t._v("protected 属性 weight")])]),t._v(" "),a("tr",[a("td",[t._v("~height: double")]),t._v(" "),a("td",[t._v("defaut 权限属性 包属性")])]),t._v(" "),a("tr",[a("td",[t._v("----------- 方法 ---------")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("+eat(food)")]),t._v(" "),a("td",[t._v("public 访问权限方法：eat")])]),t._v(" "),a("tr",[a("td",[t._v("-walk()")]),t._v(" "),a("td",[t._v("private 访问劝降方法: walk")])]),t._v(" "),a("tr",[a("td",[t._v("#drink()")]),t._v(" "),a("td",[t._v("protected 访问权限方法")])]),t._v(" "),a("tr",[a("td",[t._v("~run()")]),t._v(" "),a("td",[t._v("default 访问权香方法")])])])])])},[],!1,null,null,null);v.default=r.exports}}]);